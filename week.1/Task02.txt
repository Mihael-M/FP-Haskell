1-Функции, които имат достъп и могат да запомнят обхвата около тях.

2-Можем да достъпим всички данни и параметри на фунцкията дори и след нейното приключване, дори и да ги дори и да ги извикаме във напълно различен обхват.

3-Функции, които използват други фунцкии, за да изпълнят накакво действие.

4-Функции за: Филтриране (вземане само на желаните елементи)
Сортиране(подреждане на тези елементи)
map(която прилага дадена функция към всеки елемент от колекция, напр. списък или набор, връщайки резултатите в колекция от същия тип).

5-Функции, които нямат странични ефекти(случаи като неща, които могат да променят фунцкията отвън или да са зададена във самата фунцкия, така че да може да я промени).

6-Когато повтаряме, това което подаваме винаги ни повтаря и това което ни връща(като махне променливостта на променливите). 

7-Кърирането в Haskell е процесът на превръщане на функция с няколко аргумента в поредица от функции с по един аргумент, като всяка от тях приема само един параметър и връща нова функция, която очаква следващия параметър.

8-Всичко, което пишем е декларативно,детерминистично и непроменливо.